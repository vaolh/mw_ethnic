
  ___  ____  ____  ____  ____ ®
 /__    /   ____/   /   ____/      StataNow 19.5
___/   /   /___/   /   /___/       MP—Parallel Edition

 Statistics and Data Science       Copyright 1985-2025 StataCorp LLC
                                   StataCorp
                                   4905 Lakeway Drive
                                   College Station, Texas 77845 USA
                                   800-782-8272        https://www.stata.com
                                   979-696-4600        service@stata.com

Stata license: 65-student 2-core lab, expiring 18 May 2026
Serial number: 501909312971
  Licensed to: Victor Ortega
               Columbia University

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 5,000 but can be increased;
          see help set_maxvar.

. do "enighdata.do" 

. *************************************************
. ***************** Clean Memory ******************
. *************************************************
. 
. clear

. cap clear

. cap log close

. set more off

. 
. *** REPLICATION FILE: enighdata
. *** STATA VERSION: 18/SE
. *** AUTHOR: Victor Alfonso Ortega Le Hénanff
. *** EMAIL: vincictor33@gmail.com
. *** DATE: 2025-02-16
. 
. *** The data dictionary for ENIGH is the following:
. *** https://www.inegi.org.mx/rnm/index.php/catalog/685/data-dictionary
. 
. *************************************************
. ************** INFLATION DATASET ***************
. *************************************************
. 
. tempfile deflators

. import delimited using "../input/inpc.csv", clear varnames(1)
(encoding automatically selected: UTF-8)
(1 var, 84 obs)

. gen year = 2016 + int((_n-1)/12)

. gen month = mod(_n-1, 12) + 1

. gen mes = string(month)

. replace mes = "0" + mes if month < 10
(63 real changes made)

. gen time = date(string(year) + "-" + mes, "YM")

. format time %td

. drop year month mes

. save `deflators'
file /var/folders/ym/ly4nlkxs5_3dmz2_2h7wxvr80000gn/T//St09139.000001 saved
    as .dta format

. 
. *************************************************
. ******* LOOP FOR ALL ENIGH DATASETS ************
. *************************************************
. 
. local years "2016 2018 2020 2022 2024"

. local cumulative_ids = 0

. local tempfiles ""

. 
. foreach year of local years {
  2.     display "Processing ENIGH `year' dataset..."
  3.     
.     *************************************************
.     ******** Poblacion and concentradohogar *********
.     *************************************************
.     
.     use "../input/poblacion`year'.dta", clear
  4.     egen new_id = concat(folioviv foliohog numren)
  5.     keep new_id hablaind lenguaind comprenind etnia sexo edad madre_hog pa
> dre_hog asis_esc nivelaprob gradoaprob residencia hor_1 trabajo_mp 
  6.     tempfile pop_data_`year'
  7.     save `pop_data_`year''
  8.     
.     use "../input/concentradohogar`year'.dta", clear
  9.     collapse (first) ubica_geo, by(folioviv)
 10.     tempfile hog_data_`year'
 11.     save `hog_data_`year''
 12.         
.         *************************************************
.     ************* Trabajos ENIGH dataset ************
.     *************************************************
.         
.         use "../input/trabajos`year'.dta", clear
 13.         egen new_id = concat(folioviv foliohog numren)
 14.         keep new_id htrab
 15.         tempfile trab_data_`year'
 16.     save `trab_data_`year''
 17.     
.     *************************************************
.     ************ Ingresos ENIGH dataset *************
.     *************************************************
.     
.     use "../input/ingresos`year'.dta", clear
 18.     egen new_id = concat(folioviv foliohog numren)
 19.     
.     gen clave_group = ""
 20.     
.     /*Income Classification - consistent across all years*/
.     replace clave_group = "wages" if inlist(clave, "P001", "P002", "P011", "P
> 018", "P019", "P067")
 21.     
.     replace clave_group = "non_wage_income" if inlist(clave, "P003", "P004", 
> "P005", "P006", "P007", "P009")
 22.     replace clave_group = "non_wage_income" if inlist(clave, "P008","P014"
> ,"P015","P016")
 23.     
.     replace clave_group = "gov_transfers" if inlist(clave, "P032","P033","P03
> 8","P040","P042","P043","P044","P045") 
 24.     replace clave_group = "gov_transfers" if inlist(clave, "P048","P101","
> P046","P047","P102","P103")
 25.     replace clave_group = "gov_transfers" if inlist(clave, "P104","P105","
> P106","P107","P108")
 26.     
.     replace clave_group = "other" if inlist(clave, "P012","P013","P020","P021
> ","P022","P034","P035","P036","P037")
 27.     replace clave_group = "other" if inlist(clave, "P041","P049","P051","P
> 057","P058","P039")
 28.         
.     replace clave_group = "rentas" if inlist(clave, "P023","P024","P025")
 29.     
.     replace clave_group = "fin_capital" if inlist(clave, "P026","P027","P028"
> ,"P029","P030","P031","P050")
 30.     replace clave_group = "fin_capital" if inlist(clave, "P065","P066","P0
> 52","P053","P064")
 31.     
.     replace clave_group = "negocio" if inlist(clave, "P068","P069","P070","P0
> 71","P072","P073","P074")  
 32.     replace clave_group = "negocio" if inlist(clave, "P078","P079","P080",
> "P081","P075","P076","P077")
 33.     
.     replace clave_group = "ventas" if inlist(clave, "P054","P055","P056","P05
> 9","P060","P061","P062","P063")
 34.     
.     *Collapse income by income classes
.     collapse (sum) ing_1 ing_2 ing_3 ing_4 ing_5 ing_6 (first) mes_1 mes_2 me
> s_3 mes_4 mes_5 mes_6, by(new_id clave_group)
 35.     
.     * Replace spaces with the value from the other row with the same new_id
.     foreach mes in mes_1 mes_2 mes_3 mes_4 mes_5 mes_6 {
 36.         replace `mes' = `mes'[_n-1] if `mes' == " " & new_id == new_id[_n-
> 1]
 37.         replace `mes' = `mes'[_n+1] if `mes' == " " & new_id == new_id[_n+
> 1]
 38.     }
 39.     
.     *Create a panel dataset
.     reshape long ing_, i(new_id clave_group) j(month)
 40.     gen mes = ""
 41.     
.     * Loop through the months and assign the value from mes_1, mes_2, mes_3..
> .
.     foreach m of numlist 1/6 {
 42.         replace mes = mes_`m' if month == `m'
 43.     }
 44.     
.     drop month mes_1 mes_2 mes_3 mes_4 mes_5
 45.     
.     gen ing_wages = ing_ if clave_group == "wages"
 46.     gen ing_non_wage_income = ing_ if clave_group == "non_wage_income"
 47.     gen ing_fin_capital = ing_ if clave_group == "fin_capital"
 48.     gen ing_gov_transfers = ing_ if clave_group == "gov_transfers"
 49.     gen ing_negocio = ing_ if clave_group == "negocio"
 50.     gen ing_other = ing_ if clave_group == "other"
 51.     gen ing_rentas = ing_ if clave_group == "rentas"
 52.     gen ing_ventas = ing_ if clave_group == "ventas"
 53.     
.     collapse (max) ing_wages ing_non_wage_income ing_fin_capital ing_gov_tran
> sfers ing_negocio ing_other ing_rentas ing_ventas, by(new_id mes mes_6)
 54.     
.     drop mes_6
 55.     
.     *************************************************
.     ************ Merge with previous datasets *******
.     *************************************************
.     
.     merge m:1 new_id using `pop_data_`year''
 56.     drop _merge
 57.     gen folioviv = substr(new_id, 1, length(new_id) - 3)
 58.         
.         merge m:1 new_id using `trab_data_`year''
 59.     drop _merge
 60.     
.     merge m:1 folioviv using `hog_data_`year'', keepusing(ubica_geo)
 61.     drop _merge
 62.         
.     *************************************************
.     ************ Data cleanup for estimation ********
.     *************************************************
.     
.     sort new_id mes
 63.     
.     *generate date
.     gen time = date("`year'-" + mes, "YM")
 64.     format time %td
 65.     order time, after(mes)
 66.     gen year = `year'
 67.     order year, after(time)
 68.     label variable time "month year date"
 69.     drop mes
 70.     
.     *generate gender
.     gen gender = .
 71.     replace gender = 1 if sexo == "1"
 72.     replace gender = 0 if sexo == "2"
 73.     label define genderlbl 1 "Male" 0 "Female"
 74.     label values gender genderlbl
 75.     order gender, after(sexo)
 76.     label variable gender "gender"
 77.     label variable edad "age"
 78.     order gender edad, after(time)
 79.     drop sexo
 80.     
.     *mother and father home
.     gen motherhome = .
 81.     replace motherhome = 1 if madre_hog == "1"
 82.     replace motherhome = 0 if madre_hog == "2"
 83.     label define motherlbl 1 "Yes" 0 "No"
 84.     label values motherhome motherlbl
 85.     order motherhome, after(madre_hog)
 86.     label variable motherhome "lives with mother"
 87.     drop madre_hog
 88.     
.     gen fatherhome = .
 89.     replace fatherhome = 1 if padre_hog == "1"
 90.     replace fatherhome = 0 if padre_hog == "2"
 91.     label define fatherlbl 1 "Yes" 0 "No"
 92.     label values fatherhome fatherlbl
 93.     order fatherhome, before(motherhome)
 94.     label variable fatherhome "lives with father"
 95.     drop padre_hog
 96.     
.     *indigenous language speaker
.     gen indspeaker = .
 97.     replace indspeaker = 1 if hablaind == "1"
 98.     replace indspeaker = 0 if hablaind == "2"
 99.     label define indspeakerlbl 1 "Yes" 0 "No"
100.     label values indspeaker indspeakerlbl
101.     order indspeaker, before(hablaind)
102.     label variable indspeaker "speaks indigenous language"
103.     drop hablaind
104.     
.     *indigenous language 
.     rename lenguaind indlang
105.     label variable indlang "indigenous language spoken"
106.     destring indlang, replace
107.     
.     * Define indigenous language labels (complete list)
.     label define indlanglbl ///
>         111 "Paipai" ///
>         112 "Kiliwa" ///
>         113 "Cucapá" ///
>         114 "Cochimí" ///
>         115 "Kumiai" ///
>         121 "Seri" ///
>         131 "Chontal de Oaxaca" ///
>         200 "Chinanteco" ///
>         211 "Chinanteco de Ojitlán" ///
>         212 "Chinanteco de Usila" ///
>         221 "Chinanteco de Quiotepec" ///
>         222 "Chinanteco de Yolox" ///
>         223 "Chinanteco de Sochiapan" ///
>         231 "Chinanteco de Palantla" ///
>         232 "Chinanteco de Valle Nacional" ///
>         241 "Chinanteco de Lalana" ///
>         243 "Unknown" ///
>         311 "Pame" ///
>         321 "Chichimeca Jonaz" ///
>         331 "Otomí" ///
>         332 "Mazahua" ///
>         341 "Matlatzinca" ///
>         342 "Ocuilteco" ///
>         400 "Zapoteco" ///
>         411 "Zapoteco de Ixtlán" ///
>         412 "Zapoteco Vijano" ///
>         413 "Zapoteco del Rincón" ///
>         421 "Zapoteco Vallista" ///
>         422 "Zapoteco del Istmo" ///
>         431 "Zapoteco de Cuixtla" ///
>         432 "Solteco" ///
>         433 "Zapoteco Sureño" ///
>         441 "Chatino" ///
>         450 "Mixteco" ///
>         451 "Mixteco Zona Costa" ///
>         452 "Mixteco Zona Alta" ///
>         453 "Mixteco Zona Baja" ///
>         454 "Mixteco Zona Mazateca" ///
>         455 "Mixteco de Puebla" ///
>         456 "Tacuate" ///
>         461 "Cuicateco" ///
>         471 "Triqui" ///
>         481 "Amuzgo" ///
>         482 "Amuzgo de Guerrero" ///
>         483 "Amuzgo de Oaxaca" ///
>         491 "Mazateco" ///
>         492 "Chocholteco" ///
>         493 "Ixcateco" ///
>         494 "Popoloca" ///
>         511 "Huave" ///
>         611 "Tlapaneco" ///
>         711 "Totonaca" ///
>         712 "Tepehua" ///
>         800 "Popoluca" ///
>         811 "Mixe" ///
>         812 "Popoluca de Oluta" ///
>         821 "Popoluca de la Sierra" ///
>         822 "Popoluca de Texistepec" ///
>         823 "Zoque" ///
>         824 "Ayapaneco" ///
>         911 "Huasteco" ///
>         921 "Lacandón" ///
>         922 "Maya" ///
>         931 "Ch'ol" ///
>         932 "Chontal de Tabasco" ///
>         933 "Tzeltal" ///
>         934 "Tzotzil" ///
>         935 "Tojolabal" ///
>         936 "Chuj" ///
>         941 "Mame" ///
>         942 "Ixil" ///
>         943 "Aguacateco" ///
>         951 "Motocintleco" ///
>         961 "Kanjobal" ///
>         962 "Jacalteco" ///
>         971 "Quiché" ///
>         972 "Cakchiquel" ///
>         981 "Kekchi" ///
>         1011 "Pima" ///
>         1012 "Pápago" ///
>         1013 "Tepehuano" ///
>         1014 "Tepehuano del Norte" ///
>         1015 "Tepehuano del Sur" ///
>         1021 "Tarahumara" ///
>         1022 "Mayo" ///
>         1023 "Yaqui" ///
>         1024 "Guarijío" ///
>         1031 "Cora" ///
>         1032 "Huichol" ///
>         1041 "Náhuatl" ///
>         1111 "Purépecha" ///
>         1211 "Kikapú" ///
>         1311 "Chontal" ///
>         1999 "Non Specified" ///
>         9999 "Non Specified" ///
>         5023 "Chapaneco" ///
>         5024 "Chiapaneco" ///
>         5025 "Chicomucelteco" ///
>         5050 "Guachichil" ///
>         5053 "Guaycura" ///
>         5063 "Huzco" ///
>         5098 "Teco" ///
>         5103 "Tehueco" ///
>         5501 "Añu" ///
>         5504 "Akatako" ///
>         5513 "Aymara" ///
>         5540 "Guajiro" ///
>         5544 "Guaymi" ///
>         5551 "Quechua" ///
>         5556 "Mayu" ///
>         5571 "Pipil" ///
>         5603 "Other American Languages" ///
>         5595 "Wayuu"
108.     label values indlang indlanglbl
109.     
.     *understands indigenous language 
.     gen indund = .
110.     replace indund = 1 if comprenind == "1"
111.     replace indund = 0 if comprenind == "2"
112.     label define indundlbl 0 "No" 1 "Yes"
113.     label values indund indundlbl
114.     order indund, before(comprenind)
115.     label variable indund "understands indigenous language"
116.     drop comprenind
117.     
.     *indigenous self-identification 
.     gen indigenous = .
118.     replace indigenous = 1 if etnia == "1"
119.     replace indigenous = 0 if etnia == "2"
120.     label define indigenouslbl 0 "No" 1 "Yes"
121.     label values indigenous indigenouslbl
122.     order indigenous, before(etnia)
123.     label variable indigenous "indigenous self-identification"
124.     drop etnia
125.     
.     *school attendance
.     gen school_attendance = .
126.     replace school_attendance = 1 if asis_esc == "1"
127.     replace school_attendance = 0 if asis_esc == "2"
128.     label define school_attendlbl 0 "No" 1 "Yes"
129.     label values school_attendance school_attendlbl
130.     order school_attendance, before(asis_esc)
131.     label variable school_attendance "school attendance"
132.     drop asis_esc
133.     
.     *years of school achieved
.     gen years_of_study = .
134.     replace years_of_study = 0 if nivelaprob == "0"
135.     replace years_of_study = 0 if nivelaprob == "1"
136.     replace years_of_study = 1 if nivelaprob == "2" & gradoaprob == "1"
137.     replace years_of_study = 2 if nivelaprob == "2" & gradoaprob == "2"
138.     replace years_of_study = 3 if nivelaprob == "2" & gradoaprob == "3"
139.     replace years_of_study = 4 if nivelaprob == "2" & gradoaprob == "4"
140.     replace years_of_study = 5 if nivelaprob == "2" & gradoaprob == "5"
141.     replace years_of_study = 6 if nivelaprob == "2" & gradoaprob == "6"
142.     replace years_of_study = 7 if nivelaprob == "3" & gradoaprob == "1"
143.     replace years_of_study = 8 if nivelaprob == "3" & gradoaprob == "2"
144.     replace years_of_study = 9 if nivelaprob == "3" & gradoaprob == "3"
145.     replace years_of_study = 10 if nivelaprob == "4" & gradoaprob == "1"
146.     replace years_of_study = 11 if nivelaprob == "4" & gradoaprob == "2"
147.     replace years_of_study = 12 if nivelaprob == "4" & gradoaprob == "3"
148.     replace years_of_study = 13 if nivelaprob == "5" & gradoaprob == "1"
149.     replace years_of_study = 14 if nivelaprob == "5" & gradoaprob == "2"
150.     replace years_of_study = 15 if nivelaprob == "5" & gradoaprob == "3"
151.     replace years_of_study = 16 if nivelaprob == "5" & gradoaprob == "4"
152.     replace years_of_study = 17 if nivelaprob == "5" & gradoaprob == "5"
153.     replace years_of_study = 13 if nivelaprob == "6" & gradoaprob == "1"
154.     replace years_of_study = 14 if nivelaprob == "6" & gradoaprob == "2"
155.     replace years_of_study = 15 if nivelaprob == "6" & gradoaprob == "3"
156.     replace years_of_study = 16 if nivelaprob == "6" & gradoaprob == "4"
157.     replace years_of_study = 17 if nivelaprob == "6" & gradoaprob == "5"
158.     replace years_of_study = 13 if nivelaprob == "7" & gradoaprob == "1"
159.     replace years_of_study = 14 if nivelaprob == "7" & gradoaprob == "2"
160.     replace years_of_study = 15 if nivelaprob == "7" & gradoaprob == "3"
161.     replace years_of_study = 16 if nivelaprob == "7" & gradoaprob == "4"
162.     replace years_of_study = 17 if nivelaprob == "7" & gradoaprob == "5"
163.     replace years_of_study = 18 if nivelaprob == "8" & gradoaprob == "1"
164.     replace years_of_study = 19 if nivelaprob == "8" & gradoaprob == "2"
165.     replace years_of_study = 20 if nivelaprob == "8" & gradoaprob == "3"
166.     replace years_of_study = 21 if nivelaprob == "9" & gradoaprob == "1"
167.     replace years_of_study = 22 if nivelaprob == "9" & gradoaprob == "2"
168.     replace years_of_study = 23 if nivelaprob == "9" & gradoaprob == "3"
169.     replace years_of_study = 24 if nivelaprob == "9" & gradoaprob == "4"
170.     replace years_of_study = 25 if nivelaprob == "9" & gradoaprob == "5"
171.     label variable years_of_study "years of study"
172.     order years_of_study, after(school_attendance)
173.     drop nivelaprob gradoaprob
174.     
.     *generate state
.     drop residencia
175.     gen state = substr(ubica_geo, 1, 2)
176.     destring state, replace
177.     label define states ///
>         1 "Aguascalientes" ///
>         2 "Baja California" ///
>         3 "Baja California Sur" ///
>         4 "Campeche" ///
>         5 "Coahuila" ///
>         6 "Colima" ///
>         7 "Chiapas" ///
>         8 "Chihuahua" ///
>         9 "Ciudad de México" ///
>         10 "Durango" ///
>         11 "Guanajuato" ///
>         12 "Guerrero" ///
>         13 "Hidalgo" ///
>         14 "Jalisco" ///
>         15 "México" ///
>         16 "Michoacán" ///
>         17 "Morelos" ///
>         18 "Nayarit" ///
>         19 "Nuevo León" ///
>         20 "Oaxaca" ///
>         21 "Puebla" ///
>         22 "Querétaro" ///
>         23 "Quintana Roo" ///
>         24 "San Luis Potosí" ///
>         25 "Sinaloa" ///
>         26 "Sonora" ///
>         27 "Tabasco" ///
>         28 "Tamaulipas" ///
>         29 "Tlaxcala" ///
>         30 "Veracruz" ///
>         31 "Yucatán" ///
>         32 "Zacatecas"
178. 
.     label values state states
179.     label variable state "state"
180.     label variable ubica_geo "municipality"
181.     label variable new_id "id"
182.     order ubica_geo state, after(new_id)
183.     
.     *work hours and employment dummy
.     rename hor_1 hoursworked
184.     label variable hoursworked "hours worked per week (personas)"
185.         rename htrab hoursworked2 
186.         label variable hoursworked "hours worked per week (trabajos)"
187.     gen employed = .
188.     replace employed = 1 if trabajo_mp == "1"
189.     replace employed = 0 if trabajo_mp == "2"
190.     label define employedlbl 0 "No" 1 "Yes"
191.     label values employed employedlbl
192.     drop trabajo_mp
193.     label variable employed "employed previous month"
194.     drop folioviv
195.     
.     *income labels
.     label variable ing_wages "wage income"
196.     label variable ing_non_wage_income "non wage labor income"
197.     label variable ing_gov_transfers "government transfer income"
198.     label variable ing_other "unclassified income"
199.     label variable ing_rentas "rental income"
200.     label variable ing_fin_capital "financial capital income"
201.     label variable ing_negocio "business income"
202.     label variable ing_ventas "sales income"
203.     
.     *clean id - generate unique IDs across years
.     egen dirty_id = group(new_id)
204.     gen id = dirty_id + `cumulative_ids'
205.     order id, before(new_id)
206.     drop dirty_id
207.     
.     *clean ubica_geo
.     replace ubica_geo = substr(ubica_geo, 1, length(ubica_geo) - 4)
208.     
.     *count unique individuals for next iteration
.     quietly: egen temp_max = max(id)
209.     local year_max = temp_max[1]
210.     drop temp_max
211.     local cumulative_ids = `year_max'
212.     
.     *tempfile for append later
.     tempfile enighdata`year'
213.     save `enighdata`year''
214.     
.     local tempfiles "`tempfiles' `enighdata`year''"
215.     
.     display "Finished processing `year'. Total individuals so far: `cumulativ
> e_ids'"
216. }
Processing ENIGH 2016 dataset...
file /var/folders/ym/ly4nlkxs5_3dmz2_2h7wxvr80000gn/T//St09139.000002 saved
    as .dta format
file /var/folders/ym/ly4nlkxs5_3dmz2_2h7wxvr80000gn/T//St09139.000003 saved
    as .dta format
file /var/folders/ym/ly4nlkxs5_3dmz2_2h7wxvr80000gn/T//St09139.000004 saved
    as .dta format
(334,337 missing values generated)
variable clave_group was str1 now str5
(87,634 real changes made)
variable clave_group was str5 now str15
(67,059 real changes made)
(17,987 real changes made)
(78,525 real changes made)
(3,297 real changes made)
(0 real changes made)
(23,196 real changes made)
(15,084 real changes made)
(2,757 real changes made)
(703 real changes made)
(6,970 real changes made)
(22,540 real changes made)
(4,699 real changes made)
(3,886 real changes made)
(4,109 real changes made)
(26,970 real changes made)
(4,109 real changes made)
(26,970 real changes made)
(4,109 real changes made)
(26,970 real changes made)
(4,109 real changes made)
(26,970 real changes made)
(4,109 real changes made)
(26,970 real changes made)
(4,109 real changes made)
(26,970 real changes made)
(j = 1 2 3 4 5 6)

Data                               Wide   ->   Long
-----------------------------------------------------------------------------
Number of observations          279,789   ->   1,678,734   
Number of variables                  14   ->   10          
j variable (6 values)                     ->   month
xij variables:
                  ing_1 ing_2 ... ing_6   ->   ing_
-----------------------------------------------------------------------------
(1,678,734 missing values generated)
variable mes was str1 now str2
(279,789 real changes made)
(279,789 real changes made)
(279,789 real changes made)
(279,789 real changes made)
(279,789 real changes made)
(279,789 real changes made)
(1,155,822 missing values generated)
(1,387,560 missing values generated)
(1,634,202 missing values generated)
(1,250,706 missing values generated)
(1,532,040 missing values generated)
(1,472,538 missing values generated)
(1,662,372 missing values generated)
(1,655,898 missing values generated)

    Result                      Number of obs
    -----------------------------------------
    Not matched                        82,686
        from master                         0  (_merge==1)
        from using                     82,686  (_merge==2)

    Matched                         1,050,277  (_merge==3)
    -----------------------------------------
variable new_id does not uniquely identify observations in the using data
r(459);

end of do-file
r(459);
